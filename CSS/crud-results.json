{"numFailedTestSuites":7,"numFailedTests":64,"numPassedTestSuites":0,"numPassedTests":3,"numPendingTestSuites":0,"numPendingTests":2,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":7,"numTotalTests":69,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1615541540285,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Concurrency","Try to create the same resource, using PUT 10 times"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:90:9)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41"],"fullName":"Concurrency Try to create the same resource, using PUT 10 times succeeds exactly once","location":null,"status":"failed","title":"succeeds exactly once"},{"ancestorTitles":["Concurrency","Try to create the same resource, using PUT 10 times"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:94:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Concurrency Try to create the same resource, using PUT 10 times creates the resource","location":null,"status":"failed","title":"creates the resource"},{"ancestorTitles":["Concurrency","Try to create the same resource, using PUT 10 times"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:99:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Concurrency Try to create the same resource, using PUT 10 times body was set by the successful request","location":null,"status":"failed","title":"body was set by the successful request"},{"ancestorTitles":["Concurrency","Try to create the same resource, using PUT 10 times"],"failureMessages":["Error: Fetcher: <http://localhost:3000/solid-crud-tests-1615541543718/exists/> Unauthorized\n    at Fetcher.failFetch (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1084:17)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1787:26\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Concurrency Try to create the same resource, using PUT 10 times adds the resource in the container listing exactly once","location":null,"status":"failed","title":"adds the resource in the container listing exactly once"},{"ancestorTitles":["Concurrency","Try to create the same resource, using PUT 10 times"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:117:9)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Concurrency Try to create the same resource, using PUT 10 times WPS  emits websockets-pubsub on the container exactly once","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the container exactly once"},{"ancestorTitles":["Concurrency","Try to create the same resource, using PUT 10 times"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:124:9)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Concurrency Try to create the same resource, using PUT 10 times WPS  emits websockets-pubsub on the resource exactly once","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource exactly once"},{"ancestorTitles":["Concurrency","Use PATCH 10 times to add triple to the same resource"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m10\u001b[39m\nReceived: \u001b[31m0\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:175:9\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:14:53)\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:8:71\n    at new Promise (<anonymous>)\n    at Object.<anonymous>.__awaiter (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:4:12)\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:172:29)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)"],"fullName":"Concurrency Use PATCH 10 times to add triple to the same resource succeeds 10 times","location":null,"status":"failed","title":"succeeds 10 times"},{"ancestorTitles":["Concurrency","Use PATCH 10 times to add triple to the same resource"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:180:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Concurrency Use PATCH 10 times to add triple to the same resource updates the resource","location":null,"status":"failed","title":"updates the resource"},{"ancestorTitles":["Concurrency","Use PATCH 10 times to add triple to the same resource"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m10\u001b[39m\nReceived: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts:197:9)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Concurrency Use PATCH 10 times to add triple to the same resource WPS  emits websockets-pubsub on the resource 10 times","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource 10 times"}],"endTime":1615541550529,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConcurrency › Try to create the same resource, using PUT 10 times › succeeds exactly once\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 88 | \u001b[39m        results\u001b[33m.\u001b[39mfilter((result) \u001b[33m=>\u001b[39m responseCodeGroup(result\u001b[33m.\u001b[39mstatus) \u001b[33m===\u001b[39m \u001b[32m\"2xx\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 | \u001b[39m          \u001b[33m.\u001b[39mlength\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 90 | \u001b[39m      )\u001b[33m.\u001b[39mtoEqual(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 91 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 92 | \u001b[39m    it(\u001b[32m\"creates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:90:9)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConcurrency › Try to create the same resource, using PUT 10 times › creates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 92 | \u001b[39m    it(\u001b[32m\"creates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 94 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 95 | \u001b[39m      expect(result\u001b[33m.\u001b[39mheaders\u001b[33m.\u001b[39mget(\u001b[32m\"Content-Type\"\u001b[39m))\u001b[33m.\u001b[39mtoContain(\u001b[32m\"text/plain\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 96 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 97 | \u001b[39m    it(\u001b[32m\"body was set by the successful request\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:94:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConcurrency › Try to create the same resource, using PUT 10 times › body was set by the successful request\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  97 | \u001b[39m    it(\u001b[32m\"body was set by the successful request\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  98 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  99 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 100 | \u001b[39m      expect(await result\u001b[33m.\u001b[39mtext())\u001b[33m.\u001b[39mtoEqual(bodyExpected)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 101 | \u001b[39m      expect(result\u001b[33m.\u001b[39mheaders\u001b[33m.\u001b[39mget(\u001b[32m\"Content-Type\"\u001b[39m))\u001b[33m.\u001b[39mtoContain(\u001b[32m\"text/plain\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 102 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:99:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConcurrency › Try to create the same resource, using PUT 10 times › adds the resource in the container listing exactly once\u001b[39m\u001b[22m\n\n    Fetcher: <http://localhost:3000/solid-crud-tests-1615541543718/exists/> Unauthorized\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Fetcher.failFetch (\u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1084:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1787:26\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConcurrency › Try to create the same resource, using PUT 10 times › WPS  emits websockets-pubsub on the container exactly once\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 115 | \u001b[39m          (x) \u001b[33m=>\u001b[39m x \u001b[33m===\u001b[39m \u001b[32m`pub ${containerUrl}`\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 116 | \u001b[39m        )\u001b[33m.\u001b[39mlength\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 117 | \u001b[39m      )\u001b[33m.\u001b[39mtoEqual(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 118 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 119 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the resource exactly once\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 120 | \u001b[39m      expect(\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:117:9)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConcurrency › Try to create the same resource, using PUT 10 times › WPS  emits websockets-pubsub on the resource exactly once\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 122 | \u001b[39m          (x) \u001b[33m=>\u001b[39m x \u001b[33m===\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 123 | \u001b[39m        )\u001b[33m.\u001b[39mlength\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 124 | \u001b[39m      )\u001b[33m.\u001b[39mtoEqual(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 125 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 126 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 127 | \u001b[39m  describe(\u001b[32m\"Use PATCH 10 times to add triple to the same resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:124:9)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConcurrency › Use PATCH 10 times to add triple to the same resource › succeeds 10 times\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m10\u001b[39m\n    Received: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 173 | \u001b[39m      expect(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 174 | \u001b[39m        results\u001b[33m.\u001b[39mfilter((x) \u001b[33m=>\u001b[39m responseCodeGroup(x\u001b[33m.\u001b[39mstatus) \u001b[33m===\u001b[39m \u001b[32m\"2xx\"\u001b[39m)\u001b[33m.\u001b[39mlength\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 175 | \u001b[39m      )\u001b[33m.\u001b[39mtoEqual(\u001b[35m10\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 176 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 177 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 178 | \u001b[39m    it(\u001b[32m\"updates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:175:9\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:8:71\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous>.__awaiter (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:4:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:172:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConcurrency › Use PATCH 10 times to add triple to the same resource › updates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 178 | \u001b[39m    it(\u001b[32m\"updates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 179 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 180 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 181 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 182 | \u001b[39m      \u001b[36mconst\u001b[39m store1 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 183 | \u001b[39m      \u001b[36mconst\u001b[39m store2 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:180:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConcurrency › Use PATCH 10 times to add triple to the same resource › WPS  emits websockets-pubsub on the resource 10 times\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m10\u001b[39m\n    Received: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 195 | \u001b[39m          (x) \u001b[33m=>\u001b[39m x \u001b[33m===\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 196 | \u001b[39m        )\u001b[33m.\u001b[39mlength\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 197 | \u001b[39m      )\u001b[33m.\u001b[39mtoEqual(\u001b[35m10\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 198 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 199 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 200 | \u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/concurrency.test.ts\u001b[39m\u001b[0m\u001b[2m:197:9)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/michiel/so/workspaces/solid-crud-tests/test/surface/concurrency.test.ts","startTime":1615541540380,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Delete","non-container"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:64:29\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Delete non-container deletes the resource","location":null,"status":"failed","title":"deletes the resource"},{"ancestorTitles":["Delete","non-container"],"failureMessages":["Error: Fetcher: <http://localhost:3000/solid-crud-tests-1615541550759/exists/> Unauthorized\n    at Fetcher.failFetch (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1084:17)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1787:26\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Delete non-container removes the resource from the container listing","location":null,"status":"failed","title":"removes the resource from the container listing"},{"ancestorTitles":["Delete","non-container"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541550759/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541550759/exists/\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541550759/exists/\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:74:56)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Delete non-container WPS  emits websockets-pubsub on the container","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the container"},{"ancestorTitles":["Delete","non-container"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541550759/exists/exists.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541550759/exists/exists.ttl\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541550759/exists/exists.ttl\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:79:55)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Delete non-container WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"},{"ancestorTitles":["Delete","non-empty container"],"failureMessages":["Error: Fetcher: <http://localhost:3000/solid-crud-tests-1615541550778/exists/> Unauthorized\n    at Fetcher.failFetch (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1084:17)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1787:26\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Delete non-empty container leaves the container with the resource in it","location":null,"status":"failed","title":"leaves the container with the resource in it"},{"ancestorTitles":["Delete","non-empty container"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:132:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Delete non-empty container leaves the resource","location":null,"status":"failed","title":"leaves the resource"},{"ancestorTitles":["Delete","non-empty container"],"failureMessages":[],"fullName":"Delete non-empty container WPS  does not emit websockets-pubsub on the container","location":null,"status":"passed","title":"WPS  does not emit websockets-pubsub on the container"},{"ancestorTitles":["Delete","non-empty container"],"failureMessages":[],"fullName":"Delete non-empty container WPS  does not emit websockets-pubsub on the resource","location":null,"status":"passed","title":"WPS  does not emit websockets-pubsub on the resource"},{"ancestorTitles":["Delete","empty container"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:193:29\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Delete empty container deletes the container","location":null,"status":"failed","title":"deletes the container"},{"ancestorTitles":["Delete","empty container"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541550789/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541550789/exists/\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541550789/exists/\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts:197:56)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Delete empty container WPS  emits websockets-pubsub on the container","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the container"}],"endTime":1615541551153,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDelete › non-container › deletes the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m404\u001b[39m\n    Received: \u001b[31m401\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 62 | \u001b[39m    it(\u001b[32m\"deletes the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 63 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 64 | \u001b[39m      expect(result\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoEqual(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 65 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 66 | \u001b[39m    it(\u001b[32m\"removes the resource from the container listing\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 67 | \u001b[39m      \u001b[36mconst\u001b[39m containerListing \u001b[33m=\u001b[39m await getContainerMembers(\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:64:29\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDelete › non-container › removes the resource from the container listing\u001b[39m\u001b[22m\n\n    Fetcher: <http://localhost:3000/solid-crud-tests-1615541550759/exists/> Unauthorized\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Fetcher.failFetch (\u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1084:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1787:26\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDelete › non-container › WPS  emits websockets-pubsub on the container\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541550759/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541550759/exists/\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541550759/exists/\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 72 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 73 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the container\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 74 | \u001b[39m      expect(websocketsPubsubClientContainer\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 75 | \u001b[39m        expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${containerUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${containerUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 76 | \u001b[39m      )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 77 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:74:56)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDelete › non-container › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541550759/exists/exists.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541550759/exists/exists.ttl\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541550759/exists/exists.ttl\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 77 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 78 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 79 | \u001b[39m      expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 80 | \u001b[39m        expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 81 | \u001b[39m      )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 82 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:79:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDelete › non-empty container › leaves the container with the resource in it\u001b[39m\u001b[22m\n\n    Fetcher: <http://localhost:3000/solid-crud-tests-1615541550778/exists/> Unauthorized\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Fetcher.failFetch (\u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1084:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1787:26\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDelete › non-empty container › leaves the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 130 | \u001b[39m    it(\u001b[32m\"leaves the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 131 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 132 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 133 | \u001b[39m      expect(await result\u001b[33m.\u001b[39mtext())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"Hello World\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 134 | \u001b[39m      expect(result\u001b[33m.\u001b[39mheaders\u001b[33m.\u001b[39mget(\u001b[32m\"Content-Type\"\u001b[39m))\u001b[33m.\u001b[39mtoContain(\u001b[32m\"text/plain\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 135 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:132:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDelete › empty container › deletes the container\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m404\u001b[39m\n    Received: \u001b[31m401\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 191 | \u001b[39m    it(\u001b[32m\"deletes the container\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 192 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 193 | \u001b[39m      expect(result\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoEqual(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 194 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 195 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 196 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the container\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:193:29\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDelete › empty container › WPS  emits websockets-pubsub on the container\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541550789/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541550789/exists/\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541550789/exists/\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 195 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 196 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the container\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 197 | \u001b[39m      expect(websocketsPubsubClientContainer\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 198 | \u001b[39m        expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${containerUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${containerUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 199 | \u001b[39m      )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 200 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/delete.test.ts\u001b[39m\u001b[0m\u001b[2m:197:56)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/michiel/so/workspaces/solid-crud-tests/test/surface/delete.test.ts","startTime":1615541550540,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Create non-container","in an existing container","using POST"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:72:50\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in an existing container using POST creates the resource","location":null,"status":"failed","title":"creates the resource"},{"ancestorTitles":["Create non-container","in an existing container","using POST"],"failureMessages":["Error: Fetcher: <http://localhost:3000/solid-crud-tests-1615541551456/exists/> Unauthorized\n    at Fetcher.failFetch (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1084:17)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1787:26\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in an existing container using POST adds the resource in the container listing","location":null,"status":"failed","title":"adds the resource in the container listing"},{"ancestorTitles":["Create non-container","in an existing container","using POST"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551456/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541551456/exists/\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551456/exists/\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:86:49)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in an existing container using POST WPS  emits websockets-pubsub on the container","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the container"},{"ancestorTitles":["Create non-container","in an existing container","using PUT"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:139:50\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in an existing container using PUT creates the resource","location":null,"status":"failed","title":"creates the resource"},{"ancestorTitles":["Create non-container","in an existing container","using PUT"],"failureMessages":["Error: Fetcher: <http://localhost:3000/solid-crud-tests-1615541551489/exists/> Unauthorized\n    at Fetcher.failFetch (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1084:17)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1787:26\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in an existing container using PUT adds the resource in the container listing","location":null,"status":"failed","title":"adds the resource in the container listing"},{"ancestorTitles":["Create non-container","in an existing container","using PUT"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551489/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541551489/exists/\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551489/exists/\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:153:58)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in an existing container using PUT WPS  emits websockets-pubsub on the container","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the container"},{"ancestorTitles":["Create non-container","in an existing container","using PUT"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551489/exists/new.txt\", \"pub http://localhost:3000/solid-crud-tests-1615541551489/exists/new.txt\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551489/exists/new.txt\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:158:57)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in an existing container using PUT WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"},{"ancestorTitles":["Create non-container","in an existing container","using PATCH"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:211:50\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in an existing container using PATCH creates the resource","location":null,"status":"failed","title":"creates the resource"},{"ancestorTitles":["Create non-container","in an existing container","using PATCH"],"failureMessages":["Error: Fetcher: <http://localhost:3000/solid-crud-tests-1615541551503/exists/> Unauthorized\n    at Fetcher.failFetch (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1084:17)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1787:26\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in an existing container using PATCH adds the resource in the container listing","location":null,"status":"failed","title":"adds the resource in the container listing"},{"ancestorTitles":["Create non-container","in an existing container","using PATCH"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551503/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541551503/exists/\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551503/exists/\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:239:58)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in an existing container using PATCH WPS  emits websockets-pubsub on the container","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the container"},{"ancestorTitles":["Create non-container","in an existing container","using PATCH"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551503/exists/new.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541551503/exists/new.ttl\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551503/exists/new.ttl\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:244:57)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in an existing container using PATCH WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"},{"ancestorTitles":["Create non-container","in a non-existing container","using PUT"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:296:50\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in a non-existing container using PUT creates the resource","location":null,"status":"failed","title":"creates the resource"},{"ancestorTitles":["Create non-container","in a non-existing container","using PUT"],"failureMessages":["Error: Fetcher: <http://localhost:3000/solid-crud-tests-1615541551506/new/> Unauthorized\n    at Fetcher.failFetch (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1084:17)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1787:26\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in a non-existing container using PUT adds the resource in the container listing","location":null,"status":"failed","title":"adds the resource in the container listing"},{"ancestorTitles":["Create non-container","in a non-existing container","using PUT"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551506/\", \"pub http://localhost:3000/solid-crud-tests-1615541551506/\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551506/\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:308:55)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in a non-existing container using PUT WPS  emits websockets-pubsub on the parent","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the parent"},{"ancestorTitles":["Create non-container","in a non-existing container","using PUT"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551506/new/\", \"pub http://localhost:3000/solid-crud-tests-1615541551506/new/\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551506/new/\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:316:58)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in a non-existing container using PUT WPS  emits websockets-pubsub on the container","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the container"},{"ancestorTitles":["Create non-container","in a non-existing container","using PUT"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551506/new/new.txt\", \"pub http://localhost:3000/solid-crud-tests-1615541551506/new/new.txt\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551506/new/new.txt\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:321:57)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in a non-existing container using PUT WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"},{"ancestorTitles":["Create non-container","in a non-existing container","using PATCH"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:370:50\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in a non-existing container using PATCH creates the resource","location":null,"status":"failed","title":"creates the resource"},{"ancestorTitles":["Create non-container","in a non-existing container","using PATCH"],"failureMessages":["Error: Fetcher: <http://localhost:3000/solid-crud-tests-1615541551509/new/> Unauthorized\n    at Fetcher.failFetch (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1084:17)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1787:26\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in a non-existing container using PATCH adds the resource in the container listing","location":null,"status":"failed","title":"adds the resource in the container listing"},{"ancestorTitles":["Create non-container","in a non-existing container","using PATCH"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551509/\", \"pub http://localhost:3000/solid-crud-tests-1615541551509/\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551509/\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:396:55)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in a non-existing container using PATCH WPS  emits websockets-pubsub on the parent","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the parent"},{"ancestorTitles":["Create non-container","in a non-existing container","using PATCH"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551509/new/\", \"pub http://localhost:3000/solid-crud-tests-1615541551509/new/\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551509/new/\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:404:58)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in a non-existing container using PATCH WPS  emits websockets-pubsub on the container","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the container"},{"ancestorTitles":["Create non-container","in a non-existing container","using PATCH"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551509/new/new.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541551509/new/new.ttl\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551509/new/new.ttl\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts:409:57)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create non-container in a non-existing container using PATCH WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"}],"endTime":1615541562080,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in an existing container › using POST › creates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 70 | \u001b[39m      it(\u001b[32m\"creates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 71 | \u001b[39m        \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 72 | \u001b[39m        expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 73 | \u001b[39m        expect(await result\u001b[33m.\u001b[39mtext())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"Hello World\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 74 | \u001b[39m        expect(result\u001b[33m.\u001b[39mheaders\u001b[33m.\u001b[39mget(\u001b[32m\"Content-Type\"\u001b[39m))\u001b[33m.\u001b[39mtoContain(\u001b[32m\"text/plain\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 75 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:72:50\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in an existing container › using POST › adds the resource in the container listing\u001b[39m\u001b[22m\n\n    Fetcher: <http://localhost:3000/solid-crud-tests-1615541551456/exists/> Unauthorized\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Fetcher.failFetch (\u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1084:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1787:26\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in an existing container › using POST › WPS  emits websockets-pubsub on the container\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551456/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541551456/exists/\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551456/exists/\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the container\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 86 | \u001b[39m        expect(websocketsPubsubClient\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${containerUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${containerUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 88 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:86:49)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in an existing container › using PUT › creates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 137 | \u001b[39m      it(\u001b[32m\"creates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 138 | \u001b[39m        \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 139 | \u001b[39m        expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 140 | \u001b[39m        expect(await result\u001b[33m.\u001b[39mtext())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"Hello World\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 141 | \u001b[39m        expect(result\u001b[33m.\u001b[39mheaders\u001b[33m.\u001b[39mget(\u001b[32m\"Content-Type\"\u001b[39m))\u001b[33m.\u001b[39mtoContain(\u001b[32m\"text/plain\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 142 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:139:50\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in an existing container › using PUT › adds the resource in the container listing\u001b[39m\u001b[22m\n\n    Fetcher: <http://localhost:3000/solid-crud-tests-1615541551489/exists/> Unauthorized\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Fetcher.failFetch (\u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1084:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1787:26\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in an existing container › using PUT › WPS  emits websockets-pubsub on the container\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551489/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541551489/exists/\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551489/exists/\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 151 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 152 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the container\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 153 | \u001b[39m        expect(websocketsPubsubClientContainer\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 154 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${containerUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${containerUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 155 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 156 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:153:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in an existing container › using PUT › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551489/exists/new.txt\", \"pub http://localhost:3000/solid-crud-tests-1615541551489/exists/new.txt\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551489/exists/new.txt\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 156 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 157 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 158 | \u001b[39m        expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 159 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 160 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 161 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:158:57)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in an existing container › using PATCH › creates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 209 | \u001b[39m      it(\u001b[32m\"creates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 210 | \u001b[39m        \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 211 | \u001b[39m        expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 212 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 213 | \u001b[39m        \u001b[36mconst\u001b[39m store1 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 214 | \u001b[39m        \u001b[36mconst\u001b[39m store2 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:211:50\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in an existing container › using PATCH › adds the resource in the container listing\u001b[39m\u001b[22m\n\n    Fetcher: <http://localhost:3000/solid-crud-tests-1615541551503/exists/> Unauthorized\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Fetcher.failFetch (\u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1084:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1787:26\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in an existing container › using PATCH › WPS  emits websockets-pubsub on the container\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551503/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541551503/exists/\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551503/exists/\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 237 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 238 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the container\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 239 | \u001b[39m        expect(websocketsPubsubClientContainer\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 240 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${containerUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${containerUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 241 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 242 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:239:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in an existing container › using PATCH › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551503/exists/new.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541551503/exists/new.ttl\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551503/exists/new.ttl\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 242 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 243 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 244 | \u001b[39m        expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 245 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 246 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 247 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:244:57)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in a non-existing container › using PUT › creates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 294 | \u001b[39m      it(\u001b[32m\"creates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 295 | \u001b[39m        \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 296 | \u001b[39m        expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 297 | \u001b[39m        expect(await result\u001b[33m.\u001b[39mtext())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"Hello World\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 298 | \u001b[39m        expect(result\u001b[33m.\u001b[39mheaders\u001b[33m.\u001b[39mget(\u001b[32m\"Content-Type\"\u001b[39m))\u001b[33m.\u001b[39mtoContain(\u001b[32m\"text/plain\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 299 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:296:50\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in a non-existing container › using PUT › adds the resource in the container listing\u001b[39m\u001b[22m\n\n    Fetcher: <http://localhost:3000/solid-crud-tests-1615541551506/new/> Unauthorized\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Fetcher.failFetch (\u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1084:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1787:26\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in a non-existing container › using PUT › WPS  emits websockets-pubsub on the parent\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551506/\", \"pub http://localhost:3000/solid-crud-tests-1615541551506/\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551506/\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 306 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 307 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the parent\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 308 | \u001b[39m        expect(websocketsPubsubClientParent\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 309 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 310 | \u001b[39m            \u001b[32m`ack ${testFolderUrl}`\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 311 | \u001b[39m            \u001b[32m`pub ${testFolderUrl}`\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:308:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in a non-existing container › using PUT › WPS  emits websockets-pubsub on the container\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551506/new/\", \"pub http://localhost:3000/solid-crud-tests-1615541551506/new/\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551506/new/\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 314 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 315 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the container\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 316 | \u001b[39m        expect(websocketsPubsubClientContainer\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 317 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${containerUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${containerUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 318 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 319 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:316:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in a non-existing container › using PUT › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551506/new/new.txt\", \"pub http://localhost:3000/solid-crud-tests-1615541551506/new/new.txt\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551506/new/new.txt\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 319 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 320 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 321 | \u001b[39m        expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 322 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 323 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 324 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:321:57)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in a non-existing container › using PATCH › creates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 368 | \u001b[39m      it(\u001b[32m\"creates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 369 | \u001b[39m        \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 370 | \u001b[39m        expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 371 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 372 | \u001b[39m        \u001b[36mconst\u001b[39m store1 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 373 | \u001b[39m        \u001b[36mconst\u001b[39m store2 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:370:50\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in a non-existing container › using PATCH › adds the resource in the container listing\u001b[39m\u001b[22m\n\n    Fetcher: <http://localhost:3000/solid-crud-tests-1615541551509/new/> Unauthorized\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Fetcher.failFetch (\u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1084:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1787:26\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in a non-existing container › using PATCH › WPS  emits websockets-pubsub on the parent\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551509/\", \"pub http://localhost:3000/solid-crud-tests-1615541551509/\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551509/\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 394 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 395 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the parent\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 396 | \u001b[39m        expect(websocketsPubsubClientParent\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 397 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 398 | \u001b[39m            \u001b[32m`ack ${testFolderUrl}`\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 399 | \u001b[39m            \u001b[32m`pub ${testFolderUrl}`\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:396:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in a non-existing container › using PATCH › WPS  emits websockets-pubsub on the container\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551509/new/\", \"pub http://localhost:3000/solid-crud-tests-1615541551509/new/\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551509/new/\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 402 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 403 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the container\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 404 | \u001b[39m        expect(websocketsPubsubClientContainer\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 405 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${containerUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${containerUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 406 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 407 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:404:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate non-container › in a non-existing container › using PATCH › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541551509/new/new.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541551509/new/new.ttl\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541551509/new/new.ttl\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 407 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 408 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 409 | \u001b[39m        expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 410 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 411 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 412 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-non-container.test.ts\u001b[39m\u001b[0m\u001b[2m:409:57)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-non-container.test.ts","startTime":1615541551166,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Alice's storage root"],"failureMessages":["Error: Fetcher: <http://localhost:3000/profile.ttl> Unauthorized\n    at Fetcher.failFetch (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1084:17)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1787:26\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)","TypeError: Cannot read property 'length' of undefined\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/fetch-pod-root.test.ts:21:21\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/fetch-pod-root.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/fetch-pod-root.test.ts:14:53)\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/fetch-pod-root.test.ts:8:71\n    at new Promise (<anonymous>)\n    at Object.<anonymous>.__awaiter (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/fetch-pod-root.test.ts:4:12)\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/fetch-pod-root.test.ts:20:36)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)"],"fullName":"Alice's storage root is an ldp BasicContainer","location":null,"status":"failed","title":"is an ldp BasicContainer"}],"endTime":1615541562438,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAlice's storage root › is an ldp BasicContainer\u001b[39m\u001b[22m\n\n    Fetcher: <http://localhost:3000/profile.ttl> Unauthorized\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Fetcher.failFetch (\u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1084:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1787:26\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAlice's storage root › is an ldp BasicContainer\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'length' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m  test(\u001b[32m\"is an ldp BasicContainer\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 21 | \u001b[39m    expect(podRoots\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoEqual(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m    \u001b[36mconst\u001b[39m store \u001b[33m=\u001b[39m getStore({\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m      fetch\u001b[33m:\u001b[39m async (url\u001b[33m,\u001b[39m options) \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m        \u001b[36mconst\u001b[39m headers \u001b[33m=\u001b[39m await getAuthHeaders(url\u001b[33m,\u001b[39m \u001b[32m\"GET\"\u001b[39m\u001b[33m,\u001b[39m authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/fetch-pod-root.test.ts\u001b[39m\u001b[0m\u001b[2m:21:21\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/fetch-pod-root.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/fetch-pod-root.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/fetch-pod-root.test.ts\u001b[39m\u001b[0m\u001b[2m:8:71\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous>.__awaiter (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/fetch-pod-root.test.ts\u001b[39m\u001b[0m\u001b[2m:4:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/fetch-pod-root.test.ts\u001b[39m\u001b[0m\u001b[2m:20:36)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/michiel/so/workspaces/solid-crud-tests/test/surface/fetch-pod-root.test.ts","startTime":1615541562093,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Update","Using PUT, overwriting plain text with plain text"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:83:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PUT, overwriting plain text with plain text updates the resource","location":null,"status":"failed","title":"updates the resource"},{"ancestorTitles":["Update","Using PUT, overwriting plain text with plain text"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562730/exists/exists1.txt\", \"pub http://localhost:3000/solid-crud-tests-1615541562730/exists/exists1.txt\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562730/exists/exists1.txt\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:88:55)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PUT, overwriting plain text with plain text WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"},{"ancestorTitles":["Update","Using PUT, overwriting Turtle with Turtle"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:136:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PUT, overwriting Turtle with Turtle updates the resource","location":null,"status":"failed","title":"updates the resource"},{"ancestorTitles":["Update","Using PUT, overwriting Turtle with Turtle"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562798/exists/exists1.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562798/exists/exists1.ttl\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562798/exists/exists1.ttl\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:155:55)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PUT, overwriting Turtle with Turtle WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"},{"ancestorTitles":["Update","Using PUT (same Turtle content)"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:202:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PUT (same Turtle content) updates the resource","location":null,"status":"failed","title":"updates the resource"},{"ancestorTitles":["Update","Using PUT (same Turtle content)"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562799/exists/exists1.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562799/exists/exists1.ttl\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562799/exists/exists1.ttl\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:219:55)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PUT (same Turtle content) WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"},{"ancestorTitles":["Update","Using PATCH to add triple"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:262:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PATCH to add triple updates the resource","location":null,"status":"failed","title":"updates the resource"},{"ancestorTitles":["Update","Using PATCH to add triple"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562801/exists/exists3.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562801/exists/exists3.ttl\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562801/exists/exists3.ttl\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:279:55)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PATCH to add triple WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"},{"ancestorTitles":["Update","Using PATCH to replace triple (same content)"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:323:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PATCH to replace triple (same content) updates the resource","location":null,"status":"failed","title":"updates the resource"},{"ancestorTitles":["Update","Using PATCH to replace triple (same content)"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562802/exists/exists4.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562802/exists/exists4.ttl\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562802/exists/exists4.ttl\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:340:55)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PATCH to replace triple (same content) WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"},{"ancestorTitles":["Update","Using PATCH to replace triple (present)"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:384:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PATCH to replace triple (present) updates the resource","location":null,"status":"failed","title":"updates the resource"},{"ancestorTitles":["Update","Using PATCH to replace triple (present)"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562803/exists/exists4.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562803/exists/exists4.ttl\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562803/exists/exists4.ttl\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:401:55)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PATCH to replace triple (present) WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"},{"ancestorTitles":["Update","Using PATCH to replace triple (not present)"],"failureMessages":[],"fullName":"Update Using PATCH to replace triple (not present) does not update the resource","location":null,"status":"pending","title":"does not update the resource"},{"ancestorTitles":["Update","Using PATCH to replace triple (not present)"],"failureMessages":[],"fullName":"Update Using PATCH to replace triple (not present) WPS  does not emit websockets-pubsub on the resource","location":null,"status":"pending","title":"WPS  does not emit websockets-pubsub on the resource"},{"ancestorTitles":["Update","Using PATCH to remove triple (present)"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:506:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PATCH to remove triple (present) updates the resource","location":null,"status":"failed","title":"updates the resource"},{"ancestorTitles":["Update","Using PATCH to remove triple (present)"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562813/exists/exists6.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562813/exists/exists6.ttl\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562813/exists/exists6.ttl\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:517:55)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PATCH to remove triple (present) WPS  emits websockets-pubsub on the resource","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the resource"},{"ancestorTitles":["Update","Using PATCH to remove triple (not present)"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:558:48\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Update Using PATCH to remove triple (not present) does not update the resource","location":null,"status":"failed","title":"does not update the resource"},{"ancestorTitles":["Update","Using PATCH to remove triple (not present)"],"failureMessages":[],"fullName":"Update Using PATCH to remove triple (not present) WPS  does not emit websockets-pubsub on the resource","location":null,"status":"passed","title":"WPS  does not emit websockets-pubsub on the resource"}],"endTime":1615541575378,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PUT, overwriting plain text with plain text › updates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 81 | \u001b[39m    it(\u001b[32m\"updates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 82 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 83 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 | \u001b[39m      expect(await result\u001b[33m.\u001b[39mtext())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"Replaced the contents.\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 | \u001b[39m      expect(result\u001b[33m.\u001b[39mheaders\u001b[33m.\u001b[39mget(\u001b[32m\"Content-Type\"\u001b[39m))\u001b[33m.\u001b[39mtoContain(\u001b[32m\"text/plain\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 86 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:83:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PUT, overwriting plain text with plain text › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562730/exists/exists1.txt\", \"pub http://localhost:3000/solid-crud-tests-1615541562730/exists/exists1.txt\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562730/exists/exists1.txt\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 86 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 88 | \u001b[39m      expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 | \u001b[39m        expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 90 | \u001b[39m      )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 91 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:88:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PUT, overwriting Turtle with Turtle › updates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 134 | \u001b[39m    it(\u001b[32m\"updates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 135 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 136 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 137 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 138 | \u001b[39m      \u001b[36mconst\u001b[39m store1 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 139 | \u001b[39m      \u001b[36mconst\u001b[39m store2 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:136:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PUT, overwriting Turtle with Turtle › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562798/exists/exists1.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562798/exists/exists1.ttl\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562798/exists/exists1.ttl\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 153 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 154 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 155 | \u001b[39m      expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 156 | \u001b[39m        expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 157 | \u001b[39m      )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 158 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:155:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PUT (same Turtle content) › updates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 200 | \u001b[39m    it(\u001b[32m\"updates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 201 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 202 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 203 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 204 | \u001b[39m      \u001b[36mconst\u001b[39m store1 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 205 | \u001b[39m      \u001b[36mconst\u001b[39m store2 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:202:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PUT (same Turtle content) › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562799/exists/exists1.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562799/exists/exists1.ttl\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562799/exists/exists1.ttl\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 217 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 218 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 219 | \u001b[39m      expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 220 | \u001b[39m        expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 221 | \u001b[39m      )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 222 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:219:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PATCH to add triple › updates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 260 | \u001b[39m    it(\u001b[32m\"updates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 261 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 262 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 263 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 264 | \u001b[39m      \u001b[36mconst\u001b[39m store1 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 265 | \u001b[39m      \u001b[36mconst\u001b[39m store2 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:262:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PATCH to add triple › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562801/exists/exists3.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562801/exists/exists3.ttl\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562801/exists/exists3.ttl\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 277 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 278 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 279 | \u001b[39m      expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 280 | \u001b[39m        expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 281 | \u001b[39m      )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 282 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:279:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PATCH to replace triple (same content) › updates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 321 | \u001b[39m    it(\u001b[32m\"updates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 322 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 323 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 324 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 325 | \u001b[39m      \u001b[36mconst\u001b[39m store1 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 326 | \u001b[39m      \u001b[36mconst\u001b[39m store2 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:323:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PATCH to replace triple (same content) › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562802/exists/exists4.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562802/exists/exists4.ttl\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562802/exists/exists4.ttl\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 338 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 339 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 340 | \u001b[39m      expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 341 | \u001b[39m        expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 342 | \u001b[39m      )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 343 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:340:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PATCH to replace triple (present) › updates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 382 | \u001b[39m    it(\u001b[32m\"updates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 383 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 384 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 385 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 386 | \u001b[39m      \u001b[36mconst\u001b[39m store1 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 387 | \u001b[39m      \u001b[36mconst\u001b[39m store2 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:384:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PATCH to replace triple (present) › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562803/exists/exists4.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562803/exists/exists4.ttl\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562803/exists/exists4.ttl\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 399 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 400 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 401 | \u001b[39m      expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 402 | \u001b[39m        expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 403 | \u001b[39m      )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 404 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:401:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PATCH to remove triple (present) › updates the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 504 | \u001b[39m    it(\u001b[32m\"updates the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 505 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 506 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 507 | \u001b[39m      \u001b[36mconst\u001b[39m store1 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 508 | \u001b[39m      \u001b[36mconst\u001b[39m store2 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 509 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:506:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PATCH to remove triple (present) › WPS  emits websockets-pubsub on the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541562813/exists/exists6.ttl\", \"pub http://localhost:3000/solid-crud-tests-1615541562813/exists/exists6.ttl\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541562813/exists/exists6.ttl\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 515 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 516 | \u001b[39m    ifWps(\u001b[32m\"emits websockets-pubsub on the resource\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 517 | \u001b[39m      expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 518 | \u001b[39m        expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 519 | \u001b[39m      )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 520 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:517:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mUpdate › Using PATCH to remove triple (not present) › does not update the resource\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 556 | \u001b[39m    it(\u001b[32m\"does not update the resource\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 557 | \u001b[39m      \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 558 | \u001b[39m      expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 559 | \u001b[39m      \u001b[36mconst\u001b[39m store1 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 560 | \u001b[39m      \u001b[36mconst\u001b[39m store2 \u001b[33m=\u001b[39m getStore(authFetcher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 561 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:558:48\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/update.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/michiel/so/workspaces/solid-crud-tests/test/surface/update.test.ts","startTime":1615541562472,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Alice's pod","Get RDFa","As JSON-LD"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toIncludeAllMembers(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected list to have all of the following members:\n  \u001b[32m[[\"<_:b0>\", \"<http://www.w3.org/2000/01/rdf-schema#seeAlso>\", \"<http://dbpedia.org/resource/Adelaide>\"], [\"<_:b0>\", \"<http://www.w3.org/2000/10/swap/pim/contact#city>\", \"Adelaide\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://www.w3.org/2000/01/rdf-schema#seeAlso>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/about.htm>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://www.w3.org/2000/10/swap/pim/contact#address>\", \"<_:b0>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/name>\", \"Jerry Smith\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/phone>\", \"<tel:+6112345678>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/primaryTopic>\", \"<http://www.example.com/metadata/foaf.rdf>\"]]\u001b[39m\nReceived:\n  \u001b[31m[]\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:145:25\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Alice's pod Get RDFa As JSON-LD MAY  Triples","location":null,"status":"failed","title":"MAY  Triples"},{"ancestorTitles":["Alice's pod","Get RDFa","As Turtle"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toIncludeAllMembers(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected list to have all of the following members:\n  \u001b[32m[[\"<_:b0>\", \"<http://www.w3.org/2000/01/rdf-schema#seeAlso>\", \"<http://dbpedia.org/resource/Adelaide>\"], [\"<_:b0>\", \"<http://www.w3.org/2000/10/swap/pim/contact#city>\", \"Adelaide\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://www.w3.org/2000/01/rdf-schema#seeAlso>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/about.htm>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://www.w3.org/2000/10/swap/pim/contact#address>\", \"<_:b0>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/name>\", \"Jerry Smith\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/phone>\", \"<tel:+6112345678>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/primaryTopic>\", \"<http://www.example.com/metadata/foaf.rdf>\"]]\u001b[39m\nReceived:\n  \u001b[31m[]\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:159:25\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Alice's pod Get RDFa As Turtle MAY  Triples","location":null,"status":"failed","title":"MAY  Triples"},{"ancestorTitles":["Alice's pod","GET Turtle","As JSON-LD"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [[\"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#hello>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#linked>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#world>\"]]\u001b[39m\nReceived: \u001b[31m[]\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:178:25\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Alice's pod GET Turtle As JSON-LD Triples","location":null,"status":"failed","title":"Triples"},{"ancestorTitles":["Alice's pod","GET Turtle","As Turtle"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [[\"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#hello>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#linked>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#world>\"]]\u001b[39m\nReceived: \u001b[31m[]\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:192:25\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Alice's pod GET Turtle As Turtle Triples","location":null,"status":"failed","title":"Triples"},{"ancestorTitles":["Alice's pod","GET JSON-LD","As JSON-LD"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [[\"<http://store.example.com/>\", \"<http://store.example.com/name>\", \"Links Bike Shop\"], [\"<http://store.example.com/>\", \"<http://store.example.com/description>\", \"The most \\\"linked\\\" bike store on earth!\"], [\"<http://store.example.com/>\", \"<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>\", \"<http://store.example.com/Store>\"]]\u001b[39m\nReceived: \u001b[31m[]\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:211:25\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:5:58)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Alice's pod GET JSON-LD As JSON-LD Triples","location":null,"status":"failed","title":"Triples"},{"ancestorTitles":["Alice's pod","GET JSON-LD","As Turtle"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [[\"<http://store.example.com/>\", \"<http://store.example.com/name>\", \"Links Bike Shop\"], [\"<http://store.example.com/>\", \"<http://store.example.com/description>\", \"The most \\\"linked\\\" bike store on earth!\"], [\"<http://store.example.com/>\", \"<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>\", \"<http://store.example.com/Store>\"]]\u001b[39m\nReceived: \u001b[31m[]\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:255:31\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts:5:58)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Alice's pod GET JSON-LD As Turtle Triples","location":null,"status":"failed","title":"Triples"}],"endTime":1615541575889,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAlice's pod › Get RDFa › As JSON-LD › MAY  Triples\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toIncludeAllMembers(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected list to have all of the following members:\n      \u001b[32m[[\"<_:b0>\", \"<http://www.w3.org/2000/01/rdf-schema#seeAlso>\", \"<http://dbpedia.org/resource/Adelaide>\"], [\"<_:b0>\", \"<http://www.w3.org/2000/10/swap/pim/contact#city>\", \"Adelaide\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://www.w3.org/2000/01/rdf-schema#seeAlso>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/about.htm>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://www.w3.org/2000/10/swap/pim/contact#address>\", \"<_:b0>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/name>\", \"Jerry Smith\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/phone>\", \"<tel:+6112345678>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/primaryTopic>\", \"<http://www.example.com/metadata/foaf.rdf>\"]]\u001b[39m\n    Received:\n      \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 143 | \u001b[39m          \u001b[32m\"application/ld+json\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 144 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 145 | \u001b[39m        expect(triples)\u001b[33m.\u001b[39mtoIncludeAllMembers(triplesFromHtml)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 146 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 147 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 148 | \u001b[39m    describe(\u001b[32m\"As Turtle\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:145:25\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAlice's pod › Get RDFa › As Turtle › MAY  Triples\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toIncludeAllMembers(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected list to have all of the following members:\n      \u001b[32m[[\"<_:b0>\", \"<http://www.w3.org/2000/01/rdf-schema#seeAlso>\", \"<http://dbpedia.org/resource/Adelaide>\"], [\"<_:b0>\", \"<http://www.w3.org/2000/10/swap/pim/contact#city>\", \"Adelaide\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://www.w3.org/2000/01/rdf-schema#seeAlso>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/about.htm>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://www.w3.org/2000/10/swap/pim/contact#address>\", \"<_:b0>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/name>\", \"Jerry Smith\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/phone>\", \"<tel:+6112345678>\"], [\"<http://localhost:3000/solid-crud-tests-1615541575671/example.html>\", \"<http://xmlns.com/foaf/0.1/primaryTopic>\", \"<http://www.example.com/metadata/foaf.rdf>\"]]\u001b[39m\n    Received:\n      \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 157 | \u001b[39m          \u001b[32m\"text/turtle\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 158 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 159 | \u001b[39m        expect(triples)\u001b[33m.\u001b[39mtoIncludeAllMembers(triplesFromHtml)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 160 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 161 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 162 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:159:25\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAlice's pod › GET Turtle › As JSON-LD › Triples\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [[\"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#hello>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#linked>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#world>\"]]\u001b[39m\n    Received: \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 176 | \u001b[39m          \u001b[32m\"application/ld+json\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 177 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 178 | \u001b[39m        expect(triples)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(triplesFromTurtle))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 179 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 180 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 181 | \u001b[39m    describe(\u001b[32m\"As Turtle\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:178:25\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAlice's pod › GET Turtle › As Turtle › Triples\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [[\"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#hello>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#linked>\", \"<http://localhost:3000/solid-crud-tests-1615541575671/example.ttl#world>\"]]\u001b[39m\n    Received: \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 190 | \u001b[39m          \u001b[32m\"text/turtle\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 191 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 192 | \u001b[39m        expect(triples)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39marrayContaining(triplesFromTurtle))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 193 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 194 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 195 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:192:25\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAlice's pod › GET JSON-LD › As JSON-LD › Triples\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [[\"<http://store.example.com/>\", \"<http://store.example.com/name>\", \"Links Bike Shop\"], [\"<http://store.example.com/>\", \"<http://store.example.com/description>\", \"The most \\\"linked\\\" bike store on earth!\"], [\"<http://store.example.com/>\", \"<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>\", \"<http://store.example.com/Store>\"]]\u001b[39m\n    Received: \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 209 | \u001b[39m          \u001b[32m\"application/ld+json\"\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 210 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 211 | \u001b[39m        expect(triples)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 212 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 213 | \u001b[39m            [\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 214 | \u001b[39m              \u001b[32m\"<http://store.example.com/>\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:211:25\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAlice's pod › GET JSON-LD › As Turtle › Triples\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [[\"<http://store.example.com/>\", \"<http://store.example.com/name>\", \"Links Bike Shop\"], [\"<http://store.example.com/>\", \"<http://store.example.com/description>\", \"The most \\\"linked\\\" bike store on earth!\"], [\"<http://store.example.com/>\", \"<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>\", \"<http://store.example.com/Store>\"]]\u001b[39m\n    Received: \u001b[31m[]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 253 | \u001b[39m          sortByProperty\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 254 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 255 | \u001b[39m        expect(sortedTriples)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 256 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 257 | \u001b[39m            [\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 258 | \u001b[39m              \u001b[32m\"<http://store.example.com/>\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:255:31\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/conneg.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at runMicrotasks (<anonymous>)\u001b[22m\n","name":"/Users/michiel/so/workspaces/solid-crud-tests/test/surface/conneg.test.ts","startTime":1615541575402,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Create container","in an existing container","using PUT"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-container.test.ts:75:50\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-container.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-container.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-container.test.ts:5:58)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create container in an existing container using PUT creates the container","location":null,"status":"failed","title":"creates the container"},{"ancestorTitles":["Create container","in an existing container","using PUT"],"failureMessages":["Error: Fetcher: <http://localhost:3000/solid-crud-tests-1615541576138/exists/> Unauthorized\n    at Fetcher.failFetch (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1084:17)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/rdflib/lib/fetcher.js:1787:26\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"],"fullName":"Create container in an existing container using PUT adds the resource in the existing container listing","location":null,"status":"failed","title":"adds the resource in the existing container listing"},{"ancestorTitles":["Create container","in an existing container","using PUT"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541576138/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541576138/exists/\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541576138/exists/\"]\u001b[39m\n    at /Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-container.test.ts:102:58\n    at step (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-container.test.ts:33:23)\n    at Object.next (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-container.test.ts:14:53)\n    at fulfilled (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-container.test.ts:5:58)"],"fullName":"Create container in an existing container using PUT WPS  emits websockets-pubsub on the existing container","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the existing container"},{"ancestorTitles":["Create container","in an existing container","using PUT"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541576138/exists/new/\", \"pub http://localhost:3000/solid-crud-tests-1615541576138/exists/new/\"]\u001b[39m\nReceived: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541576138/exists/new/\"]\u001b[39m\n    at Object.<anonymous> (/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-container.test.ts:107:57)\n    at Object.asyncJestTest (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /Users/michiel/so/workspaces/solid-crud-tests/node_modules/jest-jasmine2/build/queueRunner.js:75:41"],"fullName":"Create container in an existing container using PUT WPS  emits websockets-pubsub on the new container","location":null,"status":"failed","title":"WPS  emits websockets-pubsub on the new container"}],"endTime":1615541577323,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate container › in an existing container › using PUT › creates the container\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7m2\u001b[27mxx\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7m4\u001b[27mxx\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 73 | \u001b[39m      it(\u001b[32m\"creates the container\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 74 | \u001b[39m        \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m await authFetcher\u001b[33m.\u001b[39mfetch(resourceUrl)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 75 | \u001b[39m        expect(responseCodeGroup(result\u001b[33m.\u001b[39mstatus))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"2xx\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 76 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 77 | \u001b[39m        await store\u001b[33m.\u001b[39mfetcher\u001b[33m.\u001b[39mload(store\u001b[33m.\u001b[39msym(resourceUrl))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 78 | \u001b[39m        \u001b[36mconst\u001b[39m containerTypes \u001b[33m=\u001b[39m store\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-container.test.ts\u001b[39m\u001b[0m\u001b[2m:75:50\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-container.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-container.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-container.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at runMicrotasks (<anonymous>)\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate container › in an existing container › using PUT › adds the resource in the existing container listing\u001b[39m\u001b[22m\n\n    Fetcher: <http://localhost:3000/solid-crud-tests-1615541576138/exists/> Unauthorized\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Fetcher.failFetch (\u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1084:17)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/rdflib/lib/fetcher.js\u001b[2m:1787:26\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at runMicrotasks (<anonymous>)\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate container › in an existing container › using PUT › WPS  emits websockets-pubsub on the existing container\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541576138/exists/\", \"pub http://localhost:3000/solid-crud-tests-1615541576138/exists/\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541576138/exists/\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 100 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the existing container\"\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 101 | \u001b[39m        await \u001b[36mnew\u001b[39m \u001b[33mPromise\u001b[39m((resolve) \u001b[33m=>\u001b[39m setTimeout(resolve\u001b[33m,\u001b[39m \u001b[33mMAX_WPS_DELAY\u001b[39m))\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 102 | \u001b[39m        expect(websocketsPubsubClientContainer\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 103 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${containerUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${containerUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 104 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-container.test.ts\u001b[39m\u001b[0m\u001b[2m:102:58\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat step (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-container.test.ts\u001b[39m\u001b[0m\u001b[2m:33:23)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.next (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-container.test.ts\u001b[39m\u001b[0m\u001b[2m:14:53)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-container.test.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mCreate container › in an existing container › using PUT › WPS  emits websockets-pubsub on the new container\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mArrayContaining [\"ack http://localhost:3000/solid-crud-tests-1615541576138/exists/new/\", \"pub http://localhost:3000/solid-crud-tests-1615541576138/exists/new/\"]\u001b[39m\n    Received: \u001b[31m[\"protocol solid-0.1\", \"warning Unrecognized message format: auth \", \"warning Unrecognized message format: dpop \", \"ack http://localhost:3000/solid-crud-tests-1615541576138/exists/new/\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 106 | \u001b[39m      ifWps(\u001b[32m\"emits websockets-pubsub on the new container\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 | \u001b[39m        expect(websocketsPubsubClientResource\u001b[33m.\u001b[39mreceived)\u001b[33m.\u001b[39mtoEqual(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 108 | \u001b[39m          expect\u001b[33m.\u001b[39marrayContaining([\u001b[32m`ack ${resourceUrl}`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m`pub ${resourceUrl}`\u001b[39m])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 | \u001b[39m        )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 110 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/surface/create-container.test.ts\u001b[39m\u001b[0m\u001b[2m:107:57)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/michiel/so/workspaces/solid-crud-tests/test/surface/create-container.test.ts","startTime":1615541575902,"status":"failed","summary":""}],"wasInterrupted":false}